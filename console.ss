;	DME assembly file, generated by lcc 4.2

 ; INT_MAX: ffffffff

	.data 0x1000
L2:
	defb 48
	defb 49
	defb 50
	defb 51
	defb 52
	defb 53
	defb 54
	defb 55
	defb 56
	defb 57
	defb 97
	defb 98
	defb 99
	defb 100
	defb 101
	defb 102
	defb 0
;	.code
_printint:
	push	r1
	push	bp
	mov	bp, sp
	ldi	r4, 28
	sub	sp, sp, r4
	ldw	r3,8(bp)
	skip.ne	r3,r0
	br	L3
	ldw	r3,4(bp)
	skip.lt r3, r0
	br L6
	ld16	r4, 1
	stw	-22(bp),r4
	la16	r4,L7
	br.r r4
L6:
	stw	-22(bp),r0
L7:
	ldw	r4,-22(bp)
	stw	8(bp),r4
	skip.ne	r4,r0
	br	L3
	ldw	r4,4(bp)
sub	r4,r0,r4
	stw	-4(bp),r4
	la16	r4,L4
	br.r r4
L3:
	ldw	r4,4(bp)
	stw	-4(bp),r4
L4:
	stw	-2(bp),r0
L8:
	ldw	r4,-2(bp)
	addi	r3,r4,1
	stw	-2(bp),r3
	ldi	r3, -20
	add	r3, r3, bp
	add	r4,r4,r3
	stw	-28(bp),r4
	ldw	r3,-4(bp)
	stw	-24(bp),r3
	ldw	r2,6(bp)
	stw	-26(bp),r2
MOD16(r1,r3,r2)
	la16	r4,L2
	add	r4,r1,r4
	ldb	r4,r0(r4)
	ldw	r3,-28(bp)
	stb	r0(r3),r4
L9:
	ldw	r4,-4(bp)
	ldw	r3,6(bp)
DIV16(r1,r4,r3)
	stw	-4(bp),r1
	skip.eq r1,r0
	br L8
	ldw	r4,8(bp)
	skip.ne	r4,r0
	br	L14
	ldw	r4,-2(bp)
	addi	r3,r4,1
	stw	-2(bp),r3
	ldi	r3, -20
	add	r3, r3, bp
	add	r4,r4,r3
	ld16	r3, 45
	stb	r0(r4),r3
	la16	r4,L14
	br.r r4
L13:
	ldw	r4,-2(bp)
	ldi	r3, -20
	add	r3, r3, bp
	add	r4,r4,r3
	ldb	r4,r0(r4)
	push	r4
	la16	r2,_putc
	addi	r1,pc,2
	br.r	r2
	ldi	r2,2
	add	sp,sp,r2
L14:
	ldw	r4,-2(bp)
	subi	r4,r4,1
	stw	-2(bp),r4
	skip.lt r4, r0
	br L13
L1:
	mov	sp, bp
	pop	bp
	pop	pc

;	.global _kprintf
_kprintf:
	push	r1
	push	bp
	mov	bp, sp
	ldi	r4, 8
	sub	sp, sp, r4
	ldi	r4, 6
	add	r4, r4, bp
	stw	-8(bp),r4
	stw	-6(bp),r0
	la16	r4,L21
	br.r r4
L18:
	ldw	r4,-2(bp)
	ld16	r3, 37
	skip.ne	r4,r3
	br	L22
	ldw	r4,-2(bp)
	push	r4
	la16	r2,_putc
	addi	r1,pc,2
	br.r	r2
	ldi	r2,2
	add	sp,sp,r2
	la16	r4,L19
	br.r r4
L22:
	ldw	r4,-6(bp)
	addi	r4,r4,1
	stw	-6(bp),r4
	ldw	r3,4(bp)
	add	r4,r4,r3
	ldb	r4,r0(r4)
	ld16	r3, 255
	and	r4,r4,r3
	stw	-2(bp),r4
	ldw	r4,-2(bp)
	skip.eq r4,r0
	br L24
	la16	r4,L20
	br.r r4
L24:
	ldw	r4,-2(bp)
	ld16	r3, 104
	skip.ne	r4,r3
	br	L29
	skip.lte	r4,r3
	br	L40
L39:
	ldw	r4,-2(bp)
	ld16	r3, 37
	skip.ne	r4,r3
	br	L38
	skip.gte	r4,r3
	br	L26
L41:
	ldw	r4,-2(bp)
	ld16	r3, 100
	skip.ne	r4,r3
	br	L28
	la16	r4,L26
	br.r r4
L40:
	ldw	r4,-2(bp)
	ld16	r3, 112
	skip.ne	r4,r3
	br	L29
	ld16	r2, 115
	skip.ne	r4,r2
	br	L30
	skip.gte	r4,r3
	br	L26
L42:
	ldw	r4,-2(bp)
	ld16	r3, 120
	skip.ne	r4,r3
	br	L29
	la16	r4,L26
	br.r r4
L28:
	ld16	r4, 1
	push	r4
	ld16	r4, 10
	push	r4
	ldw	r4,-8(bp)
	addi	r3,r4,2
	stw	-8(bp),r3
	ldw	r4,r0(r4)
	push	r4
	la16	r2,_printint ; jaddr
	addi	r1,pc,2
	br.r	r2
	la16	r4,L27
	br.r r4
L29:
	push	r0
	ld16	r4, 16
	push	r4
	ldw	r4,-8(bp)
	addi	r3,r4,2
	stw	-8(bp),r3
	ldw	r4,r0(r4)
	push	r4
	la16	r2,_printint ; jaddr
	addi	r1,pc,2
	br.r	r2
	la16	r4,L27
	br.r r4
L30:
	ldw	r4,-8(bp)
	addi	r3,r4,2
	stw	-8(bp),r3
	ldw	r4,r0(r4)
	stw	-4(bp),r4
	skip.eq r4,r0
	br L37
	la16	r4,L33
	stw	-4(bp),r4
	la16	r4,L37
	br.r r4
L34:
	ldw	r4,-4(bp)
	ldb	r4,r0(r4)
	push	r4
	la16	r2,_putc
	addi	r1,pc,2
	br.r	r2
	ldi	r2,2
	add	sp,sp,r2
L35:
	ldw	r4,-4(bp)
	addi	r4,r4,1
	stw	-4(bp),r4
L37:
	ldw	r4,-4(bp)
	ldb	r4,r0(r4)
	skip.eq r4,r0
	br L34
	la16	r4,L27
	br.r r4
L38:
	ld16	r4, 37
	push	r4
	la16	r2,_putc
	addi	r1,pc,2
	br.r	r2
	ldi	r2,2
	add	sp,sp,r2
	la16	r4,L27
	br.r r4
L26:
	ld16	r4, 37
	push	r4
	la16	r2,_putc
	addi	r1,pc,2
	br.r	r2
	ldi	r2,2
	add	sp,sp,r2
	ldw	r4,-2(bp)
	push	r4
	la16	r2,_putc
	addi	r1,pc,2
	br.r	r2
	ldi	r2,2
	add	sp,sp,r2
L27:
L19:
	ldw	r4,-6(bp)
	addi	r4,r4,1
	stw	-6(bp),r4
L21:
	ldw	r4,-6(bp)
	ldw	r3,4(bp)
	add	r4,r4,r3
	ldb	r4,r0(r4)
	ld16	r3, 255
	and	r4,r4,r3
	stw	-2(bp),r4
	skip.eq r4,r0
	br L18
L20:
L16:
	mov	sp, bp
	pop	bp
	pop	pc

;	.extern _putc
	.data
L33:
	defb 40
	defb 110
	defb 117
	defb 108
	defb 108
	defb 41
	defb 0
;	.end
