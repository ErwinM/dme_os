




;	DME assembly file, generated by lcc 4.2

 ; INT_MAX: ffffffff

;	.global _main
;	.code
_main:
	push	r1
	push	bp
	mov	bp, sp
	la16	r4,L2_ls
	push	r4
	ld16	r4, 1
	push	r4
	la16	r4,_printf
	addi	r1,pc,2
	br.r	r4
	ldi	r2,4
	add	sp,sp,r2
	la16	r4,_breek
	addi	r1,pc,2
	br.r	r4
	la16	r4,_exit
	addi	r1,pc,2
	br.r	r4
	mov	r1,r0
L1_ls:
	mov	sp, bp
	pop	bp
	pop	pc

;	.extern _exit
;	.extern _breek
;	.extern _printf
	.data
L2_ls:
	defb 76
	defb 83
	defb 32
	defb 105
	defb 115
	defb 32
	defb 114
	defb 117
	defb 110
	defb 110
	defb 105
	defb 110
	defb 103
	defb 33
	defb 10
	defb 0
;	.end


_fork:
	push r1
	push bp
	mov bp, sp

	ldi r1, 1
	br dosyscall_usys

_exit:
	push r1
	push bp
	mov bp, sp

	ldi r1, 2
	br dosyscall_usys

_wait:
	push r1
	push bp
	mov bp, sp

	ldi r1, 3
	br dosyscall_usys

_exec:
	push r1
	push bp
	mov bp, sp

	ldi r1, 7
	br dosyscall_usys

_read:
	push r1
	push bp
	mov bp, sp

	ldi r1, 5
	br dosyscall_usys

_write:
	push r1
	push bp
	mov bp, sp

	ldi r1, 16
	br dosyscall_usys

dosyscall_usys:
	push r1
	syscall

	pop r4 ; this pops r1 (syscall number) from the stack into a random reg
	pop bp
	pop pc

;	DME assembly file, generated by lcc 4.2

 ; INT_MAX: ffffffff

;	.global _printf
;	.code
_printf:
	push	r1
	push	bp
	mov	bp, sp
	ldi	r4, 8
	sub	sp, sp, r4
	la16	r4,_pbuf+64
	stw	r0(r4),r0
	ldi	r4, 8
	add	r4, r4, bp
	stw	-8(bp),r4
	stw	-6(bp),r0
	la16	r4,L8_ulib
	br.r r4
L5_ulib:
	ldw	r4,-2(bp)
	ld16	r3, 37
	skip.ne	r4,r3
	br	L9_ulib
	la16	r4,_pbuf+64
	ldw	r4,r0(r4)
	la16	r3,_pbuf
	add	r4,r4,r3
	ldw	r3,-2(bp)
	stb	r0(r4),r3
	la16	r4,_pbuf+64
	ldw	r3,r0(r4)
	addi	r3,r3,1
	stw	r0(r4),r3
	la16	r4,L6_ulib
	br.r r4
L9_ulib:
	ldw	r4,-6(bp)
	addi	r4,r4,1
	stw	-6(bp),r4
	ldw	r3,6(bp)
	add	r4,r4,r3
	ldb	r4,r0(r4)
	sext	r4,r4
	ld16	r3, 255
	and	r4,r4,r3
	stw	-2(bp),r4
	ldw	r4,-2(bp)
	skip.eq r4,r0
	br L13_ulib
	la16	r4,L7_ulib
	br.r r4
L13_ulib:
	ldw	r4,-2(bp)
	ld16	r3, 104
	skip.ne	r4,r3
	br	L16_ulib
	skip.lte	r4,r3
	br	L37_ulib
L36_ulib:
	ldw	r4,-2(bp)
	ld16	r3, 37
	skip.ne	r4,r3
	br	L2_ulib9_ulib
	skip.gte	r4,r3
	br	L15_ulib
L38_ulib:
	ldw	r4,-2(bp)
	ld16	r3, 100
	skip.ne	r4,r3
	br	L16_ulib
	la16	r4,L15_ulib
	br.r r4
L37_ulib:
	ldw	r4,-2(bp)
	ld16	r3, 112
	skip.ne	r4,r3
	br	L16_ulib
	ld16	r2, 115
	skip.ne	r4,r2
	br	L19_ulib
	skip.gte	r4,r3
	br	L15_ulib
L39_ulib:
	ldw	r4,-2(bp)
	ld16	r3, 120
	skip.ne	r4,r3
	br	L16_ulib
	la16	r4,L15_ulib
	br.r r4
L19_ulib:
	la16	r4,_breek
	addi	r1,pc,2
	br.r	r4
	ldw	r4,-8(bp)
	addi	r3,r4,2
	stw	-8(bp),r3
	ldw	r4,r0(r4)
	stw	-4(bp),r4
	skip.eq r4,r0
	br L2_ulib6_ulib
	la16	r4,L2_ulib2
	stw	-4(bp),r4
	la16	r4,L2_ulib6_ulib
	br.r r4
L2_ulib3_ulib:
	la16	r4,_pbuf+64
	ldw	r4,r0(r4)
	la16	r3,_pbuf
	add	r4,r4,r3
	ldw	r3,-4(bp)
	ldb	r3,r0(r3)
	stb	r0(r4),r3
	la16	r4,_pbuf+64
	ldw	r3,r0(r4)
	addi	r3,r3,1
	stw	r0(r4),r3
L2_ulib4_ulib:
	ldw	r4,-4(bp)
	addi	r4,r4,1
	stw	-4(bp),r4
L2_ulib6_ulib:
	ldw	r4,-4(bp)
	ldb	r4,r0(r4)
	sext	r4,r4
	skip.eq r4,r0
	br L2_ulib3_ulib
	la16	r4,L16_ulib
	br.r r4
L2_ulib9_ulib:
	la16	r4,_pbuf+64
	ldw	r4,r0(r4)
	la16	r3,_pbuf
	add	r4,r4,r3
	ld16	r3, 37
	stb	r0(r4),r3
	la16	r4,_pbuf+64
	ldw	r3,r0(r4)
	addi	r3,r3,1
	stw	r0(r4),r3
	la16	r4,L16_ulib
	br.r r4
L15_ulib:
	la16	r4,_pbuf+64
	ldw	r4,r0(r4)
	la16	r3,_pbuf
	add	r4,r4,r3
	ld16	r3, 37
	stb	r0(r4),r3
	la16	r4,_pbuf+64
	ldw	r3,r0(r4)
	addi	r3,r3,1
	stw	r0(r4),r3
	la16	r4,_pbuf+64
	ldw	r4,r0(r4)
	la16	r3,_pbuf
	add	r4,r4,r3
	ldw	r3,-2(bp)
	stb	r0(r4),r3
	la16	r4,_pbuf+64
	ldw	r3,r0(r4)
	addi	r3,r3,1
	stw	r0(r4),r3
L16_ulib:
L6_ulib:
	ldw	r4,-6(bp)
	addi	r4,r4,1
	stw	-6(bp),r4
L8_ulib:
	ldw	r4,-6(bp)
	ldw	r3,6(bp)
	add	r4,r4,r3
	ldb	r4,r0(r4)
	sext	r4,r4
	ld16	r3, 255
	and	r4,r4,r3
	stw	-2(bp),r4
	skip.eq r4,r0
	br L5_ulib
L7_ulib:
	la16	r4,_pbuf+64
	ldw	r4,r0(r4)
	la16	r3,_pbuf
	add	r4,r4,r3
	stb	r0(r4),r0
	la16	r4,_pbuf+64
	ldw	r4,r0(r4)
	push	r4
	la16	r4,_pbuf
	push	r4
	ldw	r4,4(bp)
	push	r4
	la16	r4,_write
	addi	r1,pc,2
	br.r	r4
	ldi	r2,6
	add	sp,sp,r2
L2_ulib:
	mov	sp, bp
	pop	bp
	pop	pc

;	.global _gets
_gets:
	push	r1
	push	bp
	mov	bp, sp
	ldi	r4, 4
	sub	sp, sp, r4
	stw	-4(bp),r0
	la16	r4,L46_ulib
	br.r r4
L43_ulib:
	ld16	r4, 1
	push	r4
	ldi	r4, -1
	add	r4, r4, bp
	push	r4
	ldw	r4,4(bp)
	push	r4
	la16	r4,_read
	addi	r1,pc,2
	br.r	r4
	ldi	r2,6
	add	sp,sp,r2
	ldb	r4,-1(bp)
	sext	r4,r4
	ld16	r3, 13
	skip.ne	r4,r3
	br	L5_ulib0
	ld16	r3, 10
	skip.ne	r4,r3
	br	L5_ulib0
	ld16	r3, 60
	skip.eq r4,r3
	br L47_ulib
L5_ulib0:
	ldw	r4,-4(bp)
	ldw	r3,6(bp)
	add	r4,r4,r3
	stb	r0(r4),r0
	ldw	r1,-4(bp)
	la16	r4,L42_ulib
	br.r r4
L47_ulib:
	ldw	r4,-4(bp)
	ldw	r3,6(bp)
	add	r4,r4,r3
	ldb	r3,-1(bp)
	stb	r0(r4),r3
	ldw	r4,-4(bp)
	addi	r4,r4,1
	stw	-4(bp),r4
L44_ulib:
L46_ulib:
	ldw	r4,-4(bp)
	ldw	r3,8(bp)
	skip.gt	r4,r3
	br	L43_ulib
	mov	r1,r0
L42_ulib:
	mov	sp, bp
	pop	bp
	pop	pc

;	.extern _read
;	.extern _write
;	.extern _breek
	.bss
;	.global _pbuf
_pbuf:
	defs 66
	.data
L2_ulib2:
	defb 40
	defb 110
	defb 117
	defb 108
	defb 108
	defb 41
	defb 0
;	.end


_halt:
	hlt

_breek:
	push r1
	brk
	pop pc

